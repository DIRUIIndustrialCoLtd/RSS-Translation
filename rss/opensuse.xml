<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title> openSUSE 新闻</title><link/>https://news.opensuse.org<description> openSUSE 项目的最新消息</description><atom:link href="https://news.opensuse.org/feed.xml" rel="self" type="application/rss+xml"></atom:link><item><guid> https://news.opensuse.org/2024/01/23/2024-01-23-cfh-osc/</guid><title></title><pubDate> Tue, 23 Jan 2024 06:00:07 +0000</pubDate><link/> https://news.opensuse.org/2024/01/23/2024-01-23-cfh-osc/<author> admin@opensuse.org () </author><enclosure length="4096" type="inode/directory" url="https://news.opensuse.org"></enclosure><description></description><content:encoded> &lt;p>;[openSUSE 项目 (https://www.opensuse.org/) 正在邀请感兴趣的人提交 2025 年 openSUSE 会议主办方的征集。该活动是 openSUSE 社区的基石，旨在将多元化的用户、开发者和爱好者群体可以分享、学习和协作。目的不仅是为了加强现有社区，也是为了欢迎新成员加入。&lt;/p>; &lt;p>;在不同地点举行会议可以让人们更容易地参与该项目，并有助于提高人们对这个项目的认识。 openSUSE 项目并开源。虽然项目无法承诺根据项目的可用资金选择主办方，但社区参与者鼓励个人/团体提交意见。这将使社区成员发现在资金允许的情况下项目可以召开会议的领域。&lt;/p>; &lt;h3 id=&quot;what-we-are-looking-for&quot;>;我们正在寻找什么&lt;/h3>; &lt;p>;举办 openSUSE 会议是展示您的社区和城市的机会。该项目寻求充满激情的团队，他们可以在提交的内容中满足以下关键标准：&lt;/p>; &lt;ul>; &lt;li>;新参与者：吸引和吸引新参与者的策略。&lt;/li>; &lt;li>;无障碍：确保场地和所有人都可以参加活动。&lt;/li>; &lt;li>;社区参与：主办方必须参加社区会议，并定期提供更新（如果选择）。&lt;/li>; &lt;li>;成本效率：详细的预算计划，显示举办活动的总成本。 &lt;/li>; &lt;li>;社区发展目标：使会议在吸引新成员方面与往届会议一样成功的计划。&lt;/li>; &lt;li>;吸引教育机构：愿意主办 openSUSE 会议的技术大学和教育机构是提交的理想人群。&lt;/li>; &lt;li>;投标流程：类似于 &lt;a href=&quot;https://wiki.debian.org/DebConf/25/Bids/&quot;>;Debian 会议投标流程&lt;/a >; 提案将通过 openSUSE Wiki 页面提交。随后有可能进行社区投票流程。&lt;/li>; &lt;li>;提交期限：请参阅 openSUSE 会议 wiki 了解详细的时间表和提交截止日期。&lt;/li>; &lt;li>;季节灵活性：活动可以针对任何季节进行规划，为主办方提供灵活性。&lt;/li>; &lt;/ul>; &lt;h3 id=&quot;how-to-submit-your-proposal&quot;>;如何提交提案&lt;/h3>; &lt;ul>; &lt;li>;准备您的提案：详细说明如何满足上述标准。&lt;/li>; &lt;li>;在 openSUSE Wiki 上提交：在 openSUSE Wiki 上为您的出价创建专用页面，并使用 &lt;a href= 中提供的模板“https://en.opensuse.org/openSUSE:Call_for_hosts&quot;>;en.opensuse.org/openSUSE:Call_for_hosts&lt;/a>; 协助制定提案。&lt;/li>; &lt;li>;社区投票：最终选择将由涉及 openSUSE 社区的投票过程。&lt;/li>; &lt;/ul>; &lt;h3 id=&quot;why-host-the-opensuse-conference&quot;>;为什么举办 openSUSE 会议？&lt;/h3>; &lt;p>;举办 openSUSE 会议可以突出您当地的社区。这是为项目发展做出贡献的机会。&lt;/p>; &lt;h3 id=&quot;more-information-and-submission-guidelines&quot;>;更多信息和提交指南&lt;/h3>; &lt;p>;访问&lt;a href= “https://en.opensuse.org/openSUSE:Conference_How_to_Check_List&quot;>;会议清单&lt;/a>;，了解有关帮助举办 openSUSE 会议的指南的更多信息。&lt;/p>; &lt;meta name=&quot;openSUSE, opensource, Conference, call对于主机&quot; content=&quot;HTML,CSS,XML,JavaScript&quot; />;</content:encoded></item><item><guid> https://news.opensuse.org/2024/01/19/podman-wasm-support/</guid><title>使用 Podman 运行 WebAssembly 工作负载</title><pubDate>Fri, 19 Jan 2024 14:00:00 +0000</pubDate><link/> https://news.opensuse.org/2024/01/19/podman-wasm-support/<author> admin@opensuse.org（亚历山大·维琴齐） </author><enclosure length="27172" type="image/png" url="https://news.opensuse.org/wp-content/uploads/2024/01/webassembly.png"></enclosure><description> WebAssembly（缩写为 Wasm）是一种可移植的二进制指令格式。它因其作为编译目标的可移植性而广受欢迎，该编译目标支持在 Web 上部署客户端和服务器应用程序。我们可以利用 Wasm 的可移植性，通过结合 crun 和...来与 Linux 容器一起运行 Wasm 工作负载。</description><content:encoded> &lt;p>;&lt;a href=&quot;https://web assembly.org/&quot;>;WebAssembly&lt;/a>;（缩写为 Wasm）是一种可移植的二进制指令格式。它作为编译目标的可移植性而广受欢迎，可以在网络上部署客户端和服务器应用程序。&lt;/p>; &lt;p>;我们可以利用 Wasm 的可移植性，通过结合 &lt;code class 来与 Linux 容器一起运行 Wasm 工作负载=&quot;language-plaintexthighlighter-rouge&quot;>;crun&lt;/code>; 和 &lt;a href=&quot;https://podman.io/&quot;>;Podman&lt;/a>;。 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;crun&lt;/code>; 支持使用 &lt;a href=&quot;https://wasmedge.org/&quot;>;WasmEdge&lt;/a>; 运行 Wasm 工作负载，&lt;a href=&quot; https://wasmtime.dev/&quot;>;Wasmtime&lt;/a>;，或 &lt;a href=&quot;https://wasmer.io/&quot;>;Wasmer&lt;/a>; 运行时。 Podman 默认为 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;runc&lt;/code>;、&lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;runc&lt;/code>; 和 &lt;code class=&quot;language-纯文本highlighter-rouge&quot;>;crun&lt;/code>;可以互换使用。&lt;/p>; &lt;p>;&lt;a href=&quot;https://wasmedge.org/&quot;>;WasmEdge&lt;/a>;是一个轻量级、高性能的，以及适用于云原生和边缘应用程序的可扩展 WebAssembly 运行时。 WasmEdge 最近已添加到 &lt;a href=&quot;https://get.opensuse.org/tumbleweed/&quot;>;openSUSE Tumbleweed&lt;/a>; 中，如果我们在 &lt;code 中启用实验性功能，这可以为容器上的 Wasm 工作负载提供支持class=&quot;language-plaintexthighlighter-rouge&quot;>;crun&lt;/code>;。&lt;/p>; &lt;p>;现在 openSUSE Tumbleweed 和 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;crun&lt;/code 中已经有了 WasmEdge >; 对 Wasm 工作负载的实验性支持，我们可以在 Podman 上运行 WebAssembly 工作负载。&lt;/p>; &lt;h2 id=&quot;preparing-our-environment&quot;>;准备我们的环境&lt;/h2>; &lt;p>;我们首先需要安装 &lt;code class=&quot; language-plaintexthighlighter-rouge&quot;>;crun&lt;/code>; 在 Podman 的默认 OCI 运行时中为 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;runc&lt;/code>;。&lt;/p>; &lt;div class=&quot;language -bashhighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;zypper &lt;span class=&quot;k&quot;>;在 &lt;/span>;crun &lt;/code>;&lt;/pre>;&lt; /div>;&lt;/div>; &lt;p>;安装 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;crun&lt;/code>; 后，检查您是否有 Wasm 支持。&lt;/p>; &lt;div class=&quot;language-bash高亮-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;&lt;span class=&quot;nv&quot;>;$ &lt;/span>;crun &lt;span class=&quot;nt&quot;>;-v&lt;/ span>; crun 版本 1.9 提交：a538ac4ea1ff319bcfe2bf81cb5c6f687e2dc9d3 rundir：/run/user/1000/crun 规范：1.0.0 +SYSTEMD +SELINUX +APPARMOR +CAP +SECCOMP +EBPF +CRIU +LIBKRUN +WASM:wasmedge +YAJL &lt;/code>;&lt; /pre>;&lt;/div>;&lt;/div>; &lt;p>;在上面的输出中，我们可以看到 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;crun&lt;/code>; 支持 WasmEdge (&lt;code class=&quot;language -plaintexthighlighter-rouge&quot;>;+WASM:wasmedge&lt;/code>;)。&lt;/p>; &lt;h2 id=&quot;preparing-our-application&quot;>;准备我们的应用程序&lt;/h2>; &lt;p>;我们将创建一个简单的Rust 中的“Hello”应用程序。&lt;/p>; &lt;p>;首先，确保安装了 Rust 和 WasmEdge。&lt;/p>; &lt;div class=&quot;language-bashhighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt; pre class=&quot;highlight&quot;>;&lt;code>;zypper &lt;span class=&quot;k&quot;>;在 &lt;/span>;rust wasmedge &lt;/code>;&lt;/pre>;&lt;/div>;&lt;/div>; &lt;p>;现在让我们创建我们的“ Rust 中的“Hello”应用程序。&lt;/p>; &lt;div class=&quot;language-bashhighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;&lt;span class=&quot;nv&quot;>; $ &lt;/span>;货物新你好 &lt;span class=&quot;nt&quot;>;--bin&lt;/span>; &lt;span class=&quot;nv&quot;>;$ &lt;/span>;&lt;span class=&quot;nb&quot;>;cd &lt;/span>;你好&lt;/code>;&lt;/pre>;&lt;/div>;&lt;/div>; &lt;p>;将 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;src/main.rs&lt;/code>; 中的消息更改为 &lt;code class= “language-plaintexthighlighter-rouge&quot;>;Hello WebAssembly！&lt;/code>; 或您想要的任何其他消息。&lt;/p>; &lt;p>;现在让我们编译我们的应用程序，但目标机器将是 Wasm。&lt;/p>; &lt;div class=&quot;language-bashhighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;&lt;span class=&quot;nv&quot;>;$ &lt;/span>;货物构建&lt;span class=&quot; nt&quot;>;--target&lt;/span>; wasm32-wasi &lt;/code>;&lt;/pre>;&lt;/div>;&lt;/div>; &lt;p>;我们现在可以执行刚刚编译的二进制文件并检查它是否按预期工作。&lt; /p>; &lt;div class=&quot;language-bashhighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;&lt;span class=&quot;nv&quot;>;$ &lt;/span>;wasmedge 运行target/wasm32-wasi/debug/hello.wasm 你好 WebAssembly！ &lt;/code>;&lt;/pre>;&lt;/div>;&lt;/div>; &lt;p>;您已成功构建 Wasm 应用程序。&lt;/p>; &lt;h2 id=&quot;creating-a-wasm-container&quot;>;创建 Wasm 容器&lt; /h2>; &lt;p>;有了我们的 Wasm 二进制文件，让我们将其添加到容器中。&lt;/p>; &lt;p>;创建一个名为 &lt;code class=&quot;language-plaintexthighlighter-rouge&quot;>;Containerfile&lt;/code>; 的文件，并添加以下内容：&lt;/p>; &lt;div class=&quot;language-Dockerfilehighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;&lt;span class=&quot;k&quot;>;从&lt;/span>;&lt;span class=&quot;s&quot;>;草稿&lt;/span>; &lt;span class=&quot;k&quot;>;复制&lt;/span>;&lt;span class=&quot;s&quot;>; target/wasm32-wasi/debug/hello.wasm /&lt;/span>; &lt;span class=&quot;k&quot;>;CMD&lt;/span>;&lt;span class=&quot;s&quot;>; [&quot;/hello.wasm&quot;]&lt;/span>; &lt;/code>;&lt;/pre>;&lt;/div>; &lt;/div>; &lt;p>;让我们使用 Buildah 构建 Wasm 容器。&lt;/p>; &lt;div class=&quot;language-bashhighlighter-rouge&quot;>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code >;&lt;span class=&quot;nv&quot;>;$ &lt;/span>;buildah 构建 &lt;span class=&quot;nt&quot;>;--platform&lt;/span>;&lt;span class=&quot;o&quot;>;=&lt;/span>;wasi/wasm &lt;span class =&quot;nt&quot;>;-t&lt;/span>; hello-wasm &lt;span class=&quot;nb&quot;>;.&lt;/span>; &lt;/code>;&lt;/pre>;&lt;/div>;&lt;/div>; &lt;p>;你应该有一个现在 Wasm 容器。&lt;/p>; &lt;h2 id=&quot;running-a-wasm-workload&quot;>;运行 Wasm 工作负载&lt;/h2>; &lt;p>;让我们使用 Podman 运行 Wasm 容器。&lt;/p>; &lt;div class= “语言bash荧光笔-rouge”>;&lt;div class=&quot;highlight&quot;>;&lt;pre class=&quot;highlight&quot;>;&lt;code>;&lt;span class=&quot;nv&quot;>;$ &lt;/span>;podman run &lt;span class=&quot;nt&quot; >;--rm&lt;/span>; hello-wasm 你好 WebAssembly！ &lt;/code>;&lt;/pre>;&lt;/div>;&lt;/div>; &lt;p>;太好了，我们有一个可以工作的 Wasm 容器。&lt;/p>; &lt;h2 id=&quot;conclusion&quot;>;结论&lt;/h2>; &lt;p>;WebAssembly 是这是一个相当新的主题，但它已经获得了很多关注，因为您可以重用您已经知道或使用的大部分内容，并轻松移植应用程序。&lt;/p>; &lt;p>;运行本机 Wasm 容器是这种格式如何可移植的另一个例子&lt;/p>; &lt;meta name=&quot;openSUSE、Tumbleweed、开发人员、WebAssembly、Wasm、WasmEdge、Podman、runc、crun、容器&quot; content=&quot;HTML、CSS、XML、JavaScript&quot; />;</content:encoded></item><item><guid> https://news.opensuse.org/2024/01/19/clarifying-misunderstandings-of-slowroll/</guid><title>澄清对慢滚的误解</title><pubDate>Fri, 19 Jan 2024 13:00:00 +0000</pubDate><link/> https://news.opensuse.org/2024/01/19/clarifying-misunderstandings-of-slowroll/<author> admin@opensuse.org（道格拉斯·德马约） </author><enclosure length="1790302" type="image/png" url="https://news.opensuse.org/wp-content/uploads/2024/01/slowroll.png"></enclosure><description>用例调查的结果提供了一些有关人们如何看待 openSUSE Slowroll 的深刻信息。有些人认为它是 openSUSE Leap 的替代品，但最近有关 Leap 明确路线的消息应该有助于解释 Slowroll 有一条不同的道路。 Slowroll 是一个实验性发行版...</description><content:encoded> &lt;p>;&lt;a href=&quot;https://news.opensuse.org/2023/11/06/results-of-use-case-survey-published/&quot;>;用例调查&lt;/a>;的结果给出了一些关于人们如何看待 &lt;a href=&quot;https://en.opensuse.org/openSUSE:Slowroll&quot;>;openSUSE Slowroll&lt;/a>; 的深刻信息。&lt;/p>; &lt;p>;有些人将其视为 openSUSE Leap 的替代品，但最近有消息称&lt;a href=&quot;https://news.opensuse.org/2024/01/15/clear-course-is-set-for-os-leap/&quot;>;为 Leap 设置了明确的课程&lt;/a >; 应该有助于解释 Slowroll 有不同的路径。&lt;/p>; &lt;p>;Slowroll 是 2023 年推出的实验性发行版。它被设计为 &lt;a href=&quot;https://get.opensuse.org/ tumbleweed/&quot;>;openSUSE Tumbleweed&lt;/a>;，当时 openSUSE Leap 的未来尚不清楚。&lt;/p>; &lt;p>;与 Tumbleweed 相比，该发行版的主要特点是滚动发布速度较慢。&lt;/p>; &lt;p>;一些用户可能会发现 Tumbleweed 的快速更新与 openSUSE Leap 等传统稳定版本之间的平衡很有价值。毕竟，开源软件的目的和原则是促进软件自由，使用户能够出于任何目的自由地研究、修改和分发软件； Slowroll 正在执行上述所有操作。&lt;/p>; &lt;p>;Slowroll 大约每隔一个月就会集成一次重大更新，并持续提供错误修复和安全更新。&lt;/p>; &lt;p>;Slowroll 背后的想法是提供一个可以提高稳定性的发行版，同时又不会失去对基础包中新功能（例如内核、桌面环境和打包）的访问。这些较慢的更新周期允许在包含之前对软件包进行更广泛的测试和验证。 Slowroll 更像是一种跳过，而不是 Leap。&lt;/p>; &lt;p>;关于 Slowrolls 与 openSUSE Leap 的关系，需要注意的是 Slowroll 并不是 Leap 的替代品。相反，它为寻求更新软件的用户提供了一种替代方案，其速度比 Tumbleweed 慢，但比 Leap 快得多。这在 SUSE Linux Enterprise 发行版的未来分支过渡到 ALP（自适应 Linux 平台）的背景下尤其重要。 Slowroll 的开发源于 openSUSE 开发者之间关于 openSUSE Leap 发行版的未来的讨论，但与 Leap 版本没有其他关系。&lt;/p>; &lt;p>;Slowroll 仍然相当新，并且基于 openSUSE Tumbleweed 软件包。&lt; /p>; &lt;p>;虽然 Slowroll 是 openSUSE 系列的重要补充，但它迎合了选择速度稍慢的最新软件系统的用户。选择 Slowroll 这个名称是为了反映其较慢的更新周期，并在社区投票过程后保留。&lt;/p>; &lt;meta name=&quot;openSUSE, Slowroll, user, Open Source, Rolling Release, Tumbleweed, stable, family&quot; content =&quot;HTML、CSS、XML、JavaScript&quot; />;</content:encoded></item><item><guid> https://news.opensuse.org/2024/01/15/clear-course-is-set-for-os-leap/</guid><title> openSUSE Leap 的明确路线已定</title><pubDate>Mon, 15 Jan 2024 11:00:00 +0000</pubDate><link/> https://news.opensuse.org/2024/01/15/clear-course-is-set-for-os-leap/<author> admin@opensuse.org（Lubos Kocman 和 Douglas DeMaio） </author><enclosure length="9579191" type="image/png" url="https://news.opensuse.org/wp-content/uploads/2024/01/leap.png"></enclosure><description> openSUSE 发布团队确认将会有 Leap 15 的继任者，这是数字上的飞跃。正如许多人热切期待今年 Leap 15.6 的到来一样，Leap 16 作为继任者的道路也在等待着。 openSUSE Leap 基于 SUSE 新的 Adaptable Linux Platform (ALP) 代码库...</description><content:encoded> &lt;p>;openSUSE 发布团队确认将有 Leap 15 的后继版本，这是数字上的飞跃。&lt;/p>; &lt;p>;正如许多人热切等待今年 Leap 15.6 的到来一样，Leap 16 作为后继者的道路等待着。 openSUSE Leap 16 基于 SUSE 新的 Adaptable Linux Platform (ALP) 代码库，将先进的企业服务器分发的优点与用户友好的维护和安全性结合起来，这是 Leap 系列的标志。&lt;/p>; &lt;p>;Leap 16旨在在 SUSE 开发的 ALP 和有效集成社区软件包的举措中出现的尖端和传统 Linux 操作系统之间取得平衡。&lt;/p>; &lt;p>;向 Leap 16 的过渡不仅仅是一个数字步骤-上升，但象征着技术和用户体验方面的重要进步。 openSUSE Leap 的未来基于 SUSE Adaptable Linux Platform 的创新概念。&lt;/p>; &lt;p>;Adaptable Linux Platform 为下一代 openSUSE Leap、Leap Micro 和 SUSE 解决方案提供支持。它使发行版更具适应性，更适合云原生工作负载，同时还能够处理快速的创新。&lt;/p>; &lt;p>;没有计划放弃 Leap 的经典（非不可变）选项；非不可变或不可变安装变体均可用于 Leap 15，并计划用于 Leap 16。这将仍然是人们部署 Leap 的首选方式。&lt;/p>; &lt;p>;鼓励每个人参与 Leap 的开发通过提供反馈、打包、测试、文档和任何其他方式来创建这些新平台。&lt;/p>; &lt;p>;Leap 将继续遵循 &lt;a href=&quot;https://en.opensuse.org/openSUSE:Factory_development_model&quot;>; openSUSE 工厂开发模型&lt;/a>;。&lt;/p>; &lt;p>;开发过程将涉及收集需求，包括来自社区研讨会的需求，以确保 Leap 16.0 满足用户不断变化的需求​​。 openSUSE 社区已经开始关注 Leap 16 的预期推出。&lt;/p>; &lt;p>;除了 Leap 16，&lt;a href=&quot;https://get.opensuse.org/leapmicro/&quot;>;Leap Micro&lt;/ a>; 6.0将接替Leap Micro 5系列。它基于 SUSE Linux Enterprise Micro 6.0，专注于容器化和虚拟化工作负载。&lt;/p>; &lt;p>;Leap 和 Leap Micro 都将为用户提供清晰的迁移路径和充足的升级时间。如果 Leap 16 延迟，发布团队可能会延长 Leap 15.6 的生命周期，或者作为最后的手段，发布 Leap 15.7 以确保足够的重叠。 Leap 16 将确保发布与 Leap 15 的生命周期结束之间没有间隙。&lt;/p>; &lt;p>;人们可以在项目的 &lt;a href=&quot;https://en.opensuse.html&quot; 上找到有关 Leap 16 的信息更新。 org/openSUSE:Roadmap&quot;>;路线图页面&lt;/a>;。发布团队将分享 Leap 16 开发何时开始以及如何通过&lt;a href=&quot;https://en.opensuse.org/openSUSE:Communication_channels&quot;>;官方 openSUSE 渠道&lt;/a>;参与。&lt;/p>; &lt;meta name=&quot;openSUSE、开发人员、系统管理员、用户、开源、后继者、路线图、Leap、开发人员、适应性 Linux 平台、ALP、Leap Micro&quot; content=&quot;HTML,CSS,XML,JavaScript&quot; />;</content:encoded></item><item><guid> https://news.opensuse.org/2024/01/12/conference-adds-business-focused-networking-event/</guid><title>会议增加了以业务为中心的社交活动</title><pubDate>Fri, 12 Jan 2024 09:00:00 +0000</pubDate><link/> https://news.opensuse.org/2024/01/12/conference-adds-business-focused-networking-event/<author> admin@opensuse.org（道格拉斯·德马约） </author><enclosure length="3574307" type="image/png" url="https://news.opensuse.org/wp-content/uploads/2024/01/opfbiz.png"></enclosure><description> openSUSE 项目很高兴地宣布 Open 4 Business 网络活动，这是一项由 DORS/CLUC 组织发起的协作计划，定于 6 月 26 日下午 2 点至 6 点在德国纽伦堡弗兰肯校区举行。该活动将与 openSUSE Con​​ference 2024 (oSC24) 同期举行，...</description><content:encoded> &lt;p>;&lt;a href=&quot;https://www.opensuse.org/&quot;>;openSUSE 项目&lt;/a>;很高兴地宣布 Open 4 Business 网络活动，这是一项由 &lt;a href=&quot;https://www.opensuse.org/&quot;>;openSUSE 项目发起的协作计划://www.dorsluc.org/open-4-business/&quot;>;DORS/CLUC&lt;/a>; 组织，定于 6 月 26 日下午 2 点至 6 点在德国纽伦堡弗兰肯校区举行。&lt;/p>; &lt;p >;本次活动将与 &lt;a href=&quot;https://events.opensuse.org/&quot;>;openSUSE Con​​ference 2024&lt;/a>; (oSC24) 同期举行，致力于促进开源行业的联系&lt;/p>; &lt;p>;该活动旨在帮助建立一个商业环境，以帮助在开源道德和技术方面持有相似价值观的中小企业 (SME) 保持一致。 Open 4 Business 活动旨在充当连接开源爱好者的桥梁。此次活动将帮助商界人士有效参与和协作。&lt;/p>; &lt;p>;Open 4 Business 旨在实现的主要目标是：&lt;/p>; &lt;ul>; &lt;li>;强调商界与开源社区&lt;/li>; &lt;li>;提供一个实现可持续和开放业务的平台&lt;/li>; &lt;li>;促进与开源项目的业务合作&lt;/li>; &lt;li>;促进中小企业、自由职业者之间的网络和合作伙伴关系和企业&lt;/li>; &lt;/ul>; &lt;p>;对于任何渴望扩展业务网络、发现新项目并与专家同行交流的人来说，此次活动都是一个机会。该项目邀请您参加 Open 4 Business 活动。&lt;/p>; &lt;p>;openSUSE 项目谨向 DORS/CLUC 组织表示感谢，感谢他们在发起 #open4business 网络活动中所发挥的作用，并旨在帮助扩展将此商业网络活动与其他社区驱动的开源技术会议联系起来。&lt;/p>; &lt;p>;要参加，请发送电子邮件至 ddemaio@opensuse.org，主题为“open4business”，或在 4 小时 Open 4 Business 选择项下提交提案。 Open 4 Business 活动的演讲将于 6 月 26 日在 4 小时内举行，每位演讲者每次演讲的持续时间不超过 15 分钟。请注意，本次活动的会谈将在商业网络轨道下进行，与 6 月 27 日至 29 日举行的会议技术轨道不同。该活动将在 Katzwanger Str. 举行。 130，位于纽伦堡 SUSE 办事处旁边的底层。&lt;/p>; &lt;p>;提交 &lt;a href=&quot;https://events.opensuse.org/&quot;>;oSC24&lt;/a>; 提案的时间为开放至 4 月 15 日。会议将在 &lt;a href=&quot;https://z-bau.com/&quot;>;Z-Bau&lt;/a>; 举行，位于纽伦堡 SUSE 办事处的街道上。&lt;/ p>; &lt;meta name=&quot;openSUSE、Rancher、开发人员、系统管理员、用户、开源、导师、学员、Google 代码之夏、研讨会&quot; content=&quot;HTML,CSS,XML,JavaScript&quot; />;</content:encoded></item><item><guid> https://news.opensuse.org/2024/01/09/project-plans-workshop-for-gsoc-mentorship/</guid><title>项目将举办导师申请研讨会</title><pubDate>Tue, 09 Jan 2024 10:00:00 +0000</pubDate><link/> https://news.opensuse.org/2024/01/09/project-plans-workshop-for-gsoc-mentorship/<author> admin@opensuse.org（道格拉斯·德马约） </author><enclosure length="2243648" type="image/png" url="https://news.opensuse.org/wp-content/uploads/2024/01/workshop.png"></enclosure><description> openSUSE 项目将于世界标准时间 1 月 16 日 15:30 在 meet.opensuse.org/meeting 上举办研讨会，重点讨论今年的 Google Summer of Code 申请和指导工作。 openSUSE 项目有着参与 GSoC 的悠久传统以及希望作为导师参与的社区成员...</description><content:encoded> &lt;p>;&lt;a href=&quot;https://www.opensuse.org/&quot;>;openSUSE 项目&lt;/a>;将于世界标准时间 1 月 16 日 15:30 在 &lt;a href=&quot;https:// meet.opensuse.org/meeting&quot;>;meet.opensuse.org/meeting&lt;/a>; 将重点关注今年的 &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;>;Google 编程之夏&lt;/a >; 申请和指导工作。&lt;/p>; &lt;p>;openSUSE 项目有着参与 GSoC 的悠久传统，想要作为导师参与的社区成员应该参加或更新他们想要在 &lt;a href=&quot;https 上列出的项目://101.opensuse.org/&quot;>;101.opensuse.org&lt;/a>;，在 openSUSE 的 &lt;a href=&quot;https://github.com/openSUSE/mentoring&quot;>;GitHub Mentoring&lt;/a>; 上提出问题>; 项目。&lt;/p>; &lt;p>;研讨会将在 &lt;a href=&quot;https://calendar.opensuse.org/teams/marketing/events/tuesday_weekly_meeting&quot;>;openSUSE 社区会议&lt;/a>;之后确定金额可以列出今年申请的项目，申请开放时间为 1 月 22 日至 2 月 6 日。&lt;/p>; &lt;p>;研讨会将为导师和想要参与指导的人员提供足够的时间来描述几个项目想法在管理员提交 GSoC 申请之前。&lt;/p>; &lt;p>;鼓励参与者在 &lt;a href=&quot;https://etherpad.opensuse.org/p/GSoC2024WS&quot;>; 研讨会之前创建一些项目构想的大纲活动的 etherpad&lt;/a>;。&lt;/p>; &lt;p>;参加过之前 Google 编程之夏计划的导师和管理员将参加研讨会。&lt;/p>; &lt;meta name=&quot;openSUSE、Rancher、开发人员、系统管理员、用户、开源、导师、受训者、Google 代码之夏、研讨会&quot; content=&quot;HTML,CSS,XML,JavaScript&quot; />;</content:encoded></item></channel></rss>